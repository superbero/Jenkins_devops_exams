apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: movie-db
  namespace: dev
spec:
  selector:
    matchLabels:
      app: movie-db # has to match .spec.template.metadata.labels
  serviceName: movie-db
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: movie-db # has to match .spec.selector.matchLabels
    spec:
      containers:
      - name: postgres-movie_db
        image: postgres:12.1-alpine
        ports:
        - containerPort: 5432
          name: http
        envFrom:
          - configMapRef: 
              name: postgres-movie-configmap
        volumeMounts:
        - name: postgres-data-movie
          mountPath: /var/lib/postgresql/data/ 
      volumes:
        - name:  postgres-data-movie
          persistentVolumeClaim: 
            claimName: postgres-data-movie
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cast-db
  namespace: dev
spec:
  selector:
    matchLabels:
      app: cast-db # has to match .spec.template.metadata.labels
  serviceName: cast-db
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: cast-db # has to match .spec.selector.matchLabels
    spec:
      containers:
      - name: postgres-cast_db
        image: postgres:12.1-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          name: http
        envFrom:
          - configMapRef:
              name: postgres-cast-configmap
        volumeMounts:
        - name: postgres-data-cast
          mountPath: :/var/lib/postgresql/data/
      volumes:
        - name: postgres-data-cast
          persistentVolumeClaim:
            claimName: postgres-data-cast
          