namespace: dev

configmap:
  postgres_cast:
    name: postgres-cast-configmap
    POSTGRES_USER: "cast"
    POSTGRES_PASSWORD: "password"
    POSTGRES_DB: "cast_db"

  postgres_movie:
    name: postgres-movie-configmap
    POSTGRES_USER: "movie"
    POSTGRES_PASSWORD: "password"
    POSTGRES_DB: "movie_db"
  
  cast_service:
    name: cast-service-config
    uri: "postgresql://cast:password@pg-cast:5432/cast_db"

  movie_service:
    name: movie-service-config
    uri: "postgresql://movie:password@pg-movie:5432/movie_db"
    cast_service_uri: "http://cast:8000/api/v1/casts/"

  nginx:
    name: nginx-config

Deployment:
  imagePullPolicy: IfNotPresent
  replicasCount: 1

  nginx:
    name: nginx
    image: nginx
    port: 9090

  postgres:
    image: postgres:12.1-alpine
    mountPath: /var/lib/postgresql/data/
    ports: 5432
  
  movie_db:
    name: postgres-movie-db

  cast_db:
    name: postgres-cast-db

  cast_service:
    image: superbero/cast_service:latest
    name: cast-svc-deploy

  movie_service:
    image: superbero/movie_service:latest
    name: movie-svc-deploy

volumes:
  storageClassName: standard
  accessModes: ReadWriteMany
  
  persistentvolume:
    name: postgres-data
    size: 5Gi
    volume_path: /Users/admin/data
   
  persistentvolumeclaim:
    size: 2Gi
    storageClassName: standard
    accessModes: ReadWriteMany

    cast_db:
      name: postgres-data-cast
    
    movie_db:
      name: postgres-data-movie

services:
  postgres_cast:
    name: pg-cast
    type: ClusterIP
    port: 5432
    targetPort: 5432
  
  postgres_movie:
    name: pg-movie
    type: ClusterIP
    ports:  5432
    targetPort: 5432

  nginx:
    type: LoadBalancer
    ports: 9090
    targetPort: 9090
    name: nginx

  movie_service:
    type: ClusterIP
    name: movie
    port: 8000
    targetPort: 8000

  cast_service:
    type: ClusterIP
    name: cast
    port: 8000
    targetPort: 8000
